@page "/products/{ProductId:int}"
@using Website.Client.Pages.Components
@inject ILanguageContainerService langContainer;




@if (Product != null)
{
    <Title Value="@string.Join(" - ", Product.Name, "Unturned Store")"></Title>

    <Meta name="description" content="@Product.Description" />
    <Meta property="og:title" content="@Product.Name" />
    <Meta property="og:type" content="website" />
    <Meta property="og:url" content="unturnedstore.com" />
    <Meta property="og:image" content="@string.Concat("/api/images/", Product.ImageId)" />
    <Meta property="og:image:width" content="128" />
    <Meta property="og:image:height" content="128" />
    <Meta property="og:description" content="@Product.Description" />
    <Meta name="theme-color" content="#FFCC00" />

    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">@langContainer.Keys["Products"]</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Product.Name</li>
        </ol>
    </nav>
    <div class="mb-5">
        <div class="row">
            <div class="col-lg-8">

                @if (!ShowVersions)
                {
                    @if (Product.Medias.Count > 0)
                    {
                        <div class="mb-5">
                            <!-- Carousel wrapper -->
                            <div id="gallery" class="carousel slide carousel-fade" data-bs-ride="carousel">

                                <!-- Inner -->
                                <div class="carousel-inner" style="height: 450px; background-color: black;">
                                    <!-- Single item -->

                                    @for (int i = 0; i < Product.Medias.Count; i++)
                                    {
                                        var media = Product.Medias[i];

                                        <div class="carousel-item @(i == 0 ? "active" : "") d-flex align-items-center justify-content-center" style="height: 450px;">
                                            @if (media.ImageId != null)
                                            {
                                                <img src="/api/images/@media.ImageId" class="mx-auto d-block" style="max-width: 100%; max-height: 100%;" />
                                            }
                                            else
                                            {
                                                <iframe src="@media.GetEmbedUrl()" allow="encrypted-media" allowfullscreen="allowfullscreen" frameborder="0" style="width: 100%; height: 450px;">
                                                </iframe>
                                            }
                                        </div>

                                    }
                                </div>
                                @if (Product.Medias.Count > 1)
                                {
                                    <!-- Inner -->
                                    <!-- Controls -->
                                    <a class="carousel-control-prev" data-bs-target="#gallery" role="button" data-bs-slide="prev">
                                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                        <span class="visually-hidden">@langContainer.Keys["Users:ProductPage:Media:Previous"]</span>
                                    </a>
                                    <a class="carousel-control-next" data-bs-target="#gallery" role="button" data-bs-slide="next">
                                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                        <span class="visually-hidden">@langContainer.Keys["Users:ProductPage:Media:Next"]</span>
                                    </a>
                                }

                            </div>
                            <!-- Carousel wrapper -->
                        </div>

                    }

                    <div class="mb-5">
                        <nav>
                            <div class="nav nav-tabs" role="tablist">
                                @for (int i = 0; i < Product.Tabs.Count; i++)
                                {
                                    var tab = Product.Tabs[i];
                                    <button class="nav-link @(i == 0 ? "active" : "")" id="nav-@tab.Id-tab" data-bs-toggle="tab" data-bs-target="#nav-@tab.Id" type="button" role="tab" aria-controls="nav-home" aria-selected="true">
                                        @tab.Title
                                    </button>
                                }
                            </div>
                        </nav>
                        <div class="tab-content p-3 bg-light rounded-2">
                            @for (int i = 0; i < Product.Tabs.Count; i++)
                            {
                                var tab = Product.Tabs[i];
                                <div class="tab-pane fade @(i == 0 ? "show active" : "")" id="nav-@tab.Id" role="tabpanel" aria-labelledby="nav-@tab.Id-tab">
                                    @(new MarkupString(tab.Content))
                                </div>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <VersionsPage Product="Product" />
                }

            </div>
            <div class="col-lg-4 bg-light">
                <div class="text-center mt-2 mb-4">
                    <img src="/api/images/@Product.ImageId" width="150" height="150" />
                    <h4 class="mt-2">@Product.Name</h4>
                    <ul class="list-unstyled">
                        <li>@langContainer.Keys["Author"]: @Product.Seller.Name</li>
                        <AuthorizeView>
                            <Authorized>
                                <li><a class="text-decoration-none" href="/messages/create/@Product.SellerId">@langContainer.Keys["Users:ProductPage:SendMessage"]</a></li>
                            </Authorized>
                        </AuthorizeView>
                        <li>@langContainer.Keys["Price"]: @(Product.Price <= 0 ? "Free" : Product.Price + " " + Product.Seller.PayPalCurrency)</li>
                        <li>@langContainer.Keys["Downloads"]: @(Product.Branches.Sum(x => x.Versions.Sum(x => x.DownloadsCount)))</li>
                        @if (!string.IsNullOrEmpty(Product.GithubUrl))
                        {
                            <li><a href="@Product.GithubUrl" target="_blank" class="text-decoration-none"><i class="bi bi-github"></i> GitHub</a></li>
                        }
                    </ul>

                    @if (DefaultBranch != null)
                    {
                        if (IsCustomer)
                        {
                            <div class="d-grid gap-2 mt-3">

                                @if (IsSeller)
                                {
                                    <a class="btn btn-success" href="/seller/products/@ProductId">
                                        <i class="bi bi-pencil-square"></i> @langContainer.Keys["Users:ProductPage:EditProduct"]
                                    </a>
                                }

                                @if (ShowVersions)
                                {
                                    <button class="btn btn-secondary" @onclick="ToggleShowVersions">
                                        <i class="bi bi-info-circle-fill"></i> @langContainer.Keys["Users:ProductPage:ShowProductPage"]
                                    </button>
                                }
                                else
                                {
                                    <button class="btn btn-secondary" @onclick="ToggleShowVersions">
                                        <i class="bi bi-gear-fill"></i> @langContainer.Keys["Users:ProductPage:ShowAllVersions"]
                                    </button>
                                }

                                <form class="d-grid gap-2" method="get" action="api/versions/download/@LatestVersion.Id">
                                    <button class="btn btn-primary" type="submit">
                                        <i class="bi bi-download"></i> @langContainer.Keys["Users:ProductPage:DownloadLatest"] (@DefaultBranch.Name, @LatestVersion.Name)
                                    </button>
                                </form>

                            </div>
                        }
                        else
                        {
                            <div class="d-grid gap-2 mt-3">
                                @if (IsInCart)
                                {
                                    <a class="btn btn-primary" href="/cart">
                                        <i class="bi bi-cart-fill"></i> @langContainer.Keys["Users:ProductPage:GoToCart"]
                                    </a>
                                }
                                else
                                {
                                    <button class="btn btn-primary" @onclick="AddToCartAsync">
                                        <i class="bi bi-cart-fill"></i> @langContainer.Keys["Users:ProductPage:AddToCart"]
                                    </button>
                                }
                            </div>
                        }

                    }
                    else
                    {
                        <strong>@langContainer.Keys["Users:ProductPage:NoDownloads"]</strong>
                    }
                </div>

            </div>
        </div>
    </div>
} else
{
    <Progressbar />
}

@code {
    protected override void OnInitialized()
    {
        langContainer.InitLocalizedComponent(this);
        base.OnInitialized();
    }
}
